name: Create Jira Subtask

on:
  issues:
    types: [opened]

permissions:
  issues: write
  contents: read

jobs:
  create-jira-subtask:
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, '[TASK]')
    
    steps:
      - name: Extract Jira Story Key
        id: extract-jira-key
        run: |
          STORY_NUMBER=$(echo "${{ github.event.issue.body }}" | grep -oE '[0-9]+' | head -1)
          if [ -z "$STORY_NUMBER" ]; then
            echo "❌ No story number found"
            exit 1
          fi
          JIRA_KEY="PP-$STORY_NUMBER"
          echo "jira_key=$JIRA_KEY" >> $GITHUB_OUTPUT
          echo "✅ Built Jira Key: $JIRA_KEY"

      - name: Create Jira Subtask
        id: create-subtask
        run: |
          # ADF 형식으로 description 생성
          PAYLOAD=$(jq -n \
            --arg project "PP" \
            --arg parent "${{ steps.extract-jira-key.outputs.jira_key }}" \
            --arg summary "${{ github.event.issue.title }}" \
            --arg github_url "${{ github.event.issue.html_url }}" \
            '{
              "fields": {
                "project": {"key": $project},
                "parent": {"key": $parent},
                "summary": $summary,
                "description": {
                  "type": "doc",
                  "version": 1,
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "GitHub Issue: "
                        },
                        {
                          "type": "text",
                          "text": $github_url,
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": $github_url
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "이 작업은 GitHub에서 자동으로 생성된 하위 작업입니다."
                        }
                      ]
                    }
                  ]
                },
                "issuetype": {"name": "하위 작업"}
              }
            }')
          
          echo "Sending payload:"
          echo "$PAYLOAD"
          
          RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X POST \
            -H "Authorization: Basic ${{ secrets.JIRA_TOKEN }}" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -d "$PAYLOAD" \
            ${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue)
          
          HTTP_CODE=$(echo "$RESPONSE" | grep "HTTP_CODE:" | cut -d: -f2)
          RESPONSE_BODY=$(echo "$RESPONSE" | sed '/HTTP_CODE:/d')
          
          echo "HTTP Code: $HTTP_CODE"
          echo "Response: $RESPONSE_BODY"
          
          if [ "$HTTP_CODE" = "201" ]; then
            JIRA_ISSUE_KEY=$(echo "$RESPONSE_BODY" | jq -r '.key')
            echo "✅ Created Jira Sub-task: $JIRA_ISSUE_KEY"
            echo "jira_issue_key=$JIRA_ISSUE_KEY" >> $GITHUB_OUTPUT
          else
            echo "❌ Failed to create Jira Sub-task: $RESPONSE_BODY"
            exit 1
          fi

      - name: Add Success Comment
        if: steps.create-subtask.outputs.jira_issue_key
        uses: actions/github-script@v7
        with:
          script: |
            const jiraIssueKey = '${{ steps.create-subtask.outputs.jira_issue_key }}';
            const parentStory = '${{ steps.extract-jira-key.outputs.jira_key }}';
            const jiraBaseUrl = '${{ secrets.JIRA_BASE_URL }}';
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🔗 **Jira 하위 작업 생성 완료**

            **하위 작업:** [${jiraIssueKey}](${jiraBaseUrl}/browse/${jiraIssueKey})
            **상위 스토리:** [${parentStory}](${jiraBaseUrl}/browse/${parentStory})

            > 이 GitHub 이슈와 Jira 하위 작업이 자동으로 연결되었습니다.`
            });

      - name: Add GitHub Link to Jira
        if: steps.create-subtask.outputs.jira_issue_key
        run: |
          LINK_PAYLOAD=$(jq -n \
            --arg url "${{ github.event.issue.html_url }}" \
            --arg title "GitHub Issue #${{ github.event.issue.number }}" \
            --arg summary "${{ github.event.issue.title }}" \
            '{
              "object": {
                "url": $url,
                "title": $title,
                "summary": $summary,
                "icon": {"url16x16": "https://github.com/favicon.ico"}
              }
            }')
          
          curl -s -X POST \
            -H "Authorization: Basic ${{ secrets.JIRA_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$LINK_PAYLOAD" \
            ${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/${{ steps.extract-jira-key.outputs.jira_key }}/remotelink
